---
title: "**Lesson 2: Data Processing & Visualization**"
author: "**Alejandro Navas Gonz√°lez**"
date: today
format: 
  html:
    code-fold: False
    code-tools: true
    highlight-style: breezedark
    theme: spacelab
editor: visual
warning: false
---

```{r load_libraries}

library(tidyverse)
library(openxlsx)
library(plotly)
library(reshape2)
library(DT)
library(psych)

```

# **Import Data**

We will use the following **gene expression table**.

```{r load_csv}

df <- read.table('https://code.omicslogic.com/assets/datasets/15_genes/CellLines_15Genes.txt',row.names = 1, header = TRUE)

df %>% datatable()

```

We convert the imported dataframe into a matrix.

```{r matrix_conv}

df <- as.matrix(df)

```

Finally, we check the mean of data.

```{r mean_check}

mean(df)

```

# **Create a Boxplot, Histogram & Heatmap**

We load another gene expression table.

```{r load_ged}

df <- read.table('https://code.omicslogic.com/assets/datasets/15_genes/CellLines_15Genes.txt', 
                 row.names=1,
                 header = TRUE, 
                 sep='\t')

df %>% datatable()

```

We can ask for the descriptive statistics.

```{r summary}

describe(df) %>% datatable()

```

Then, we transform the dataframe into a matrix.

```{r df_to_matrix}

df <- as.matrix(df)
df[0:5, 0:5]

```

## **Compute Mean**

```{r mean_computation}

mean(df)

```

## **Draw Heatmap**

```{r heatmap}

heatmap(df)

```

## **Draw Boxplot**

```{r boxplot}

df <- melt(df)
ggplotly(ggplot(df, aes(x = Var1,
                        y = value, 
                        fill = Var1,
                        col = Var1)) +
           geom_boxplot(alpha = 0.5) +
           labs(x = 'Gene', y = 'Expression Level') +
           theme_bw())

```

## **Draw Histogram**

```{r histogram}

ggplotly(ggplot(df, 
                aes(x = Var2,
                    y = value,
                    fill = Var1)) + 
           geom_col() +
           labs(x = 'Sample', y = 'Expression Level') +
           theme_light() +
           theme(axis.text.x = element_text(angle = 45)))

```
